# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from api_v2 import query_pb2 as api__v2_dot_query__pb2


class QueryServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetTrace = channel.unary_stream(
        '/jaeger.api_v2.QueryService/GetTrace',
        request_serializer=api__v2_dot_query__pb2.GetTraceRequest.SerializeToString,
        response_deserializer=api__v2_dot_query__pb2.SpansResponseChunk.FromString,
        )
    self.ArchiveTrace = channel.unary_unary(
        '/jaeger.api_v2.QueryService/ArchiveTrace',
        request_serializer=api__v2_dot_query__pb2.ArchiveTraceRequest.SerializeToString,
        response_deserializer=api__v2_dot_query__pb2.ArchiveTraceResponse.FromString,
        )
    self.FindTraces = channel.unary_stream(
        '/jaeger.api_v2.QueryService/FindTraces',
        request_serializer=api__v2_dot_query__pb2.FindTracesRequest.SerializeToString,
        response_deserializer=api__v2_dot_query__pb2.SpansResponseChunk.FromString,
        )
    self.GetServices = channel.unary_unary(
        '/jaeger.api_v2.QueryService/GetServices',
        request_serializer=api__v2_dot_query__pb2.GetServicesRequest.SerializeToString,
        response_deserializer=api__v2_dot_query__pb2.GetServicesResponse.FromString,
        )
    self.GetOperations = channel.unary_unary(
        '/jaeger.api_v2.QueryService/GetOperations',
        request_serializer=api__v2_dot_query__pb2.GetOperationsRequest.SerializeToString,
        response_deserializer=api__v2_dot_query__pb2.GetOperationsResponse.FromString,
        )
    self.GetDependencies = channel.unary_unary(
        '/jaeger.api_v2.QueryService/GetDependencies',
        request_serializer=api__v2_dot_query__pb2.GetDependenciesRequest.SerializeToString,
        response_deserializer=api__v2_dot_query__pb2.GetDependenciesResponse.FromString,
        )


class QueryServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetTrace(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ArchiveTrace(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FindTraces(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetServices(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetOperations(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetDependencies(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_QueryServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetTrace': grpc.unary_stream_rpc_method_handler(
          servicer.GetTrace,
          request_deserializer=api__v2_dot_query__pb2.GetTraceRequest.FromString,
          response_serializer=api__v2_dot_query__pb2.SpansResponseChunk.SerializeToString,
      ),
      'ArchiveTrace': grpc.unary_unary_rpc_method_handler(
          servicer.ArchiveTrace,
          request_deserializer=api__v2_dot_query__pb2.ArchiveTraceRequest.FromString,
          response_serializer=api__v2_dot_query__pb2.ArchiveTraceResponse.SerializeToString,
      ),
      'FindTraces': grpc.unary_stream_rpc_method_handler(
          servicer.FindTraces,
          request_deserializer=api__v2_dot_query__pb2.FindTracesRequest.FromString,
          response_serializer=api__v2_dot_query__pb2.SpansResponseChunk.SerializeToString,
      ),
      'GetServices': grpc.unary_unary_rpc_method_handler(
          servicer.GetServices,
          request_deserializer=api__v2_dot_query__pb2.GetServicesRequest.FromString,
          response_serializer=api__v2_dot_query__pb2.GetServicesResponse.SerializeToString,
      ),
      'GetOperations': grpc.unary_unary_rpc_method_handler(
          servicer.GetOperations,
          request_deserializer=api__v2_dot_query__pb2.GetOperationsRequest.FromString,
          response_serializer=api__v2_dot_query__pb2.GetOperationsResponse.SerializeToString,
      ),
      'GetDependencies': grpc.unary_unary_rpc_method_handler(
          servicer.GetDependencies,
          request_deserializer=api__v2_dot_query__pb2.GetDependenciesRequest.FromString,
          response_serializer=api__v2_dot_query__pb2.GetDependenciesResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'jaeger.api_v2.QueryService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
