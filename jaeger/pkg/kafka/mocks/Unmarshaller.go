// Code generated by mockery v1.0.0. DO NOT EDIT.

// Copyright (c) 2018 The Jaeger Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package mocks

import mock "github.com/stretchr/testify/mock"
import model "github.com/jaegertracing/jaeger/model"

// Unmarshaller is an autogenerated mock type for the Unmarshaller type
type Unmarshaller struct {
	mock.Mock
}

// Unmarshal provides a mock function with given fields: _a0
func (_m *Unmarshaller) Unmarshal(_a0 []byte) (*model.Span, error) {
	ret := _m.Called(_a0)

	var r0 *model.Span
	if rf, ok := ret.Get(0).(func([]byte) *model.Span); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Span)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]byte) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
